library(slidify)
slidify
slidify
library(slidify)
install.packages('stringr')
install.packages("stringr")
install.packages("stringr")
devtools::install_github('muschellij2/slidify')
library(slidify)
slidify("index.Rmd")
stwd("C:/Users/Dan/Documents/R/CourseraShiny/firstdeck")
setwd("C:/Users/Dan/Documents/R/CourseraShiny/firstdeck")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
publish_rpubs('ChickenWeights', 'index.html')
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
publish_rpubs('ChickenWeights', 'index.html')
find.package(RCurl)
find.package("RCurl")
.libPaths("C:/Users/Dan/Documents/R/win-library/3.2")
publish_rpubs('ChickenWeights', 'index.html')
.libPaths("C:\Users\Dan\Documents\Rwin-library/3.2")
.libPaths("C:\Users\Dan\Documents\Rwin-library\3.2")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
publish_rpubs('ChickenWeights', 'index.html')
curl()
install.packages("curl")
install.packages("curl")
library(curl)
library(Curl)
slidify("index.Rmd")
install.packages("stringi")
install.packages("stringi")
library(stringi)
library("stringi")
install.packages("stringi",type="mac.binary")
install.packages("stringi", type = "mac.binary")
install.packages("stringi",type="win.binary")
install.packages("stringi", type = "win.binary")
library(stringi)
remove.packages('stringi')
install.packages("stringi", type = "win.binary")
install.packages("stringi", type = "win.binary")
install.packages("stringi")
install.packages("stringi")
publish(user = "dpjaeger", repo = "chickenwts_slidify")
publish(user = "dpjaeger", repo = "chickenwts_slidify")
getwd()
slidify("index.Rmd")
publish(user = "dpjaeger", repo = "chickenwts_slidify")
publish(user = "dpjaeger", repo = "chickenwts_slidify")
publish(user = "dpjaeger", repo = "CourseraShiny")
publish(user = "dpjaeger", repo = "CourseraShiny")
publish(user = "dpjaeger", repo = "CourseraShiny")
publish(user = "dpjaeger", repo = "CourseraShiny")
install.packages("plotly")
install.packages("plotly")
library(plotly)
plot_ly(mtcars, x = wt, y = mpg, mode = "markers")
mtcars
plot_ly(mtcars, x = wt, y = mpg, mode = "markers")
str(mtcars)
plot_ly(mtcars, x = wt, y = mpg, mode = "markers")
mtcars
summary(mtcars)
plot_ly(mtcars, x = wt, y = mpg, mode = "markers")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
```{r}
summary(cars)
```
getwd()
publish_rpub("Chicken Weights", html_file="index.Rmd")
publish_rpubs("Chicken Weights", html_file="index.Rmd")
library(slidify)
publish_rpubs("Chicken Weights", html_file="index.Rmd")
